public abstract class com/jayasuryat/either/Either {
	public static final field Companion Lcom/jayasuryat/either/Either$Companion;
	public final fun rightOrNull ()Ljava/lang/Object;
}

public final class com/jayasuryat/either/Either$Companion {
}

public final class com/jayasuryat/either/Either$Left : com/jayasuryat/either/Either {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getValue ()Ljava/lang/Object;
}

public final class com/jayasuryat/either/Either$Right : com/jayasuryat/either/Either {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getValue ()Ljava/lang/Object;
}

public final class com/jayasuryat/either/EitherKt {
	public static final fun left (Ljava/lang/Object;)Lcom/jayasuryat/either/Either;
	public static final fun right (Ljava/lang/Object;)Lcom/jayasuryat/either/Either;
}

public final class com/jayasuryat/either/ExtensionsKt {
	public static final fun either (Lkotlin/jvm/functions/Function1;)Lcom/jayasuryat/either/Either;
}

public final class com/jayasuryat/either/ValueBindError : java/lang/Error {
	public final fun getValue ()Ljava/lang/Object;
}

public final class com/jayasuryat/either/ValueBinder {
	public fun <init> ()V
	public final fun bind (Lcom/jayasuryat/either/Either;)Ljava/lang/Object;
}

